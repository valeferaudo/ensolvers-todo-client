{"version":3,"file":"static/js/328.bf14e34e.chunk.js","mappings":"kMACA,EAA4B,2BAA5B,EAA+D,uBAA/D,EAA+F,wBAA/F,EAAkI,0BAAlI,EAAsK,yB,oBCIvJA,EAAe,SAACC,GAC3B,MAAO,CACLC,KAAMC,EAAAA,GACNF,UAAAA,IAGSG,EAAe,SAACC,GAC3B,MAAO,CACLH,KAAMI,EAAAA,GACND,UAAAA,I,oBCIAE,EAAQ,oCAcDC,EAAa,WACxB,OAAO,SAACC,GACNA,EAf8B,CAChCP,KAAMQ,EAAAA,KAeJC,MAAMJ,GACHK,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACtC,OAAOD,EAASE,OAClB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAlBe,IAACI,EAmBrBR,GAnBqBQ,EAmBQJ,EAASK,KAnBJ,CACxChB,KAAMiB,EAAAA,GACNF,QAAAA,QAmBKG,OAAM,WACLX,EAjB0B,CAChCP,KAAMmB,EAAAA,UAoCOC,EAAe,SAACC,EAAQC,GAAT,OAAgB,SAACf,GAE3C,OADAA,EAfgC,CAChCP,KAAMuB,EAAAA,KAeCd,MAAM,GAAD,OAAIJ,EAAJ,YAAgBiB,GAAM,CAChCE,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,KAEpBX,MAAK,SAACM,GACL,GAAoB,MAAhBA,EAAKJ,QAAkC,MAAhBI,EAAKJ,OAAgB,OAAOI,EAAKH,OAC5D,MAAM,IAAIC,MAAJ,eAAkBE,EAAKJ,YAE9BF,MAAK,WACJH,EAtBwB,SAACQ,EAASO,GAAV,MAAkB,CAC9CtB,KAAM6B,EAAAA,GACNd,QAAAA,EACAO,GAAAA,GAmBaQ,CAAsBR,OAEhCJ,OAAM,WACLX,EAnB8B,CAClCP,KAAM+B,EAAAA,UAmCKC,EAAY,SAACX,GAAD,OAAY,SAACd,GAEpC,OADAA,EAd+B,CAC/BP,KAAMiC,EAAAA,KAcCxB,MAAMJ,EAAU,CACrBmB,OAAQ,OACRU,KAAM,OACNT,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KAEpBX,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACtC,OAAOD,EAASE,OAClB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAxBgB,IAACI,EAyBtBR,GAzBsBQ,EAyBMJ,EAASK,KAzBF,CACvChB,KAAMmC,EAAAA,GACNpB,QAAAA,QAyBGG,OAAM,WACLX,EAvB2B,CAC/BP,KAAMoC,EAAAA,UAsCOC,EAAe,SAACf,GAC3B,OAAO,SAACf,GAEN,OADAA,EAf8B,CAChCP,KAAMsC,EAAAA,KAeG7B,MAAM,GAAD,OAAIJ,EAAJ,YAAgBiB,IACzBZ,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OAAgB,OAAOD,EAASE,OACxE,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAjBiB,IAACI,EAmBvB,OADAR,GAlBuBQ,EAkBQJ,EAASK,KAlBJ,CAC1ChB,KAAMuC,EAAAA,GACNxB,QAAAA,KAiBaJ,EAASK,QAEjBE,OAAM,WACLX,EAjB4B,CAClCP,KAAMwC,EAAAA,UAiCKC,EAAe,SAACnB,GAAD,OAAQ,SAACf,GAEnC,OADAA,EAdkC,CAClCP,KAAM0C,EAAAA,KAcCjC,MAAM,GAAD,OAAIJ,EAAJ,YAAgBiB,GAAM,CAChCE,OAAQ,SACRC,QAAS,CACP,eAAgB,qCAGjBf,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OAAgB,OAAOD,EAASE,OACxE,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GArBmB,IAACI,EAsBzBR,GAtByBQ,EAsBMJ,EAASK,KAtBF,CAC1ChB,KAAM2C,EAAAA,GACN5B,QAAAA,QAsBGG,OAAM,WACLX,EApB8B,CAClCP,KAAM4C,EAAAA,UC9JZ,EAAuB,mB,SCsCvB,MAlCA,YAA4D,IAAtCtB,EAAqC,EAArCA,GAAIuB,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAChCvC,GAAWwC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,CAACC,MAAO,KAArD,eAAOC,EAAP,KAAmBC,EAAnB,KACM9B,GAAS+B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQjC,UAoBpD,OAlBAkC,EAAAA,EAAAA,YAAU,WACJjC,GACFf,EAAS8B,EAAaf,IAAKZ,MAAK,SAACM,GAC7BmC,EAAc,CAACF,MAAOjC,EAAKiC,aAGhC,KAaD,iCACE,6CAAqB5B,EAAO4B,UAC5B,kBAAMO,SAVO,SAACC,GAChBA,EAAEC,iBAC6B,KAA5BR,EAAWD,MAAMU,SAChBd,EAAaK,GACbJ,GAAgB,KAMQc,UAAWC,EAArC,WACE,kBAAO7D,KAAK,OAAO8D,KAAK,QAAQC,SAff,SAACN,GACtB,MAAwBA,EAAEO,OAAlBF,EAAR,EAAQA,KAAMG,EAAd,EAAcA,MACdd,GAAc,kBAAKD,GAAN,cAAmBY,EAAOG,MAauBA,MAAOf,EAAWD,SAC5E,mBAAQjD,KAAK,SAAb,mBACA,mBAAQA,KAAK,SAASkE,QAAS,kBAAMpB,GAAgB,IAArD,2BCbFzC,EAAQ,kCAcD8D,EAAW,WACtB,OAAO,SAAC5D,GACNA,EAf4B,CAC9BP,KAAMoE,EAAAA,KAeJ3D,MAAMJ,GACHK,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACtC,OAAOD,EAASE,OAClB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAlBa,IAACI,EAmBnBR,GAnBmBQ,EAmBQJ,EAASK,KAnBJ,CACtChB,KAAMqE,EAAAA,GACNtD,QAAAA,QAmBKG,OAAM,WACLX,EAjBwB,CAC9BP,KAAMsE,EAAAA,UAmCKC,EAAa,SAACC,EAAMlD,GAAP,OAAc,SAACf,GAEvC,OADAA,EAfiC,CACjCP,KAAMyE,EAAAA,KAeChE,MAAM,GAAD,OAAIJ,EAAJ,YAAgBiB,GAAM,CAChCE,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU4C,KAEpB9D,MAAK,SAACM,GACL,GAAoB,MAAhBA,EAAKJ,QAAkC,MAAhBI,EAAKJ,OAAgB,OAAOI,EAAKH,OAC5D,MAAM,IAAIC,MAAJ,eAAkBE,EAAKJ,YAE9BF,MAAK,WACJH,EAtBuB,SAACQ,EAASO,GAAV,MAAkB,CAC7CtB,KAAM0E,EAAAA,GACN3D,QAAAA,EACAO,GAAAA,GAmBaqD,CAAqBrD,OAE/BJ,OAAM,WACLX,EAnB6B,CACjCP,KAAM4E,EAAAA,UAmCKC,EAAU,SAACL,GAAD,OAAU,SAACjE,GAEhC,OADAA,EAd6B,CAC7BP,KAAM8E,EAAAA,KAcCrE,MAAMJ,EAAU,CACrBmB,OAAQ,OACRU,KAAM,OACNT,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU4C,KAEpB9D,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACtC,OAAOD,EAASE,OAClB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAxBc,IAACI,EAyBpBR,GAzBoBQ,EAyBMJ,EAASK,KAzBF,CACrChB,KAAM+E,EAAAA,GACNhE,QAAAA,QAyBGG,OAAM,WACLX,EAvByB,CAC7BP,KAAMgF,EAAAA,UAsCKC,EAAa,SAAC3D,GACzB,OAAO,SAACf,GAEN,OADAA,EAf8B,CAChCP,KAAMkF,EAAAA,KAeGzE,MAAM,GAAD,OAAIJ,EAAJ,YAAgBiB,IACzBZ,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACtC,OAAOD,EAASE,OAClB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAlBe,IAACI,EAoBrB,OADAR,GAnBqBQ,EAmBQJ,EAASK,KAnBJ,CACxChB,KAAMmF,EAAAA,GACNpE,QAAAA,KAkBaJ,EAASK,QAEjBE,OAAM,WACLX,EAlB0B,CAChCP,KAAMoF,EAAAA,UAkCKC,EAAa,SAAC/D,GAAD,OAAQ,SAACf,GAEjC,OADAA,EAdgC,CAChCP,KAAMsF,EAAAA,KAcC7E,MAAM,GAAD,OAAIJ,EAAJ,YAAgBiB,GAAM,CAChCE,OAAQ,SACRC,QAAS,CACP,eAAgB,qCAGjBf,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACtC,OAAOD,EAASE,OAClB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAtBiB,IAACI,EAuBvBR,GAvBuBQ,EAuBMJ,EAASK,KAvBF,CACxChB,KAAMuF,EAAAA,GACNxE,QAAAA,QAuBGG,OAAM,WACLX,EArB4B,CAChCP,KAAMwF,EAAAA,UAqCKC,EAAiB,SAACnE,GAC7B,OAAO,SAACf,GACNA,EAfkC,CACpCP,KAAM0F,EAAAA,KAeJjF,MAAM,GAAD,OAAIJ,EAAJ,mBAAuBiB,IACzBZ,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,OACxC,OAAOD,EAASE,OAChB,MAAM,IAAIC,MAAJ,eAAkBH,EAASC,YAElCF,MAAK,SAACC,GAlBmB,IAACI,EAmBzBR,GAnByBQ,EAmBQJ,EAASK,KAnBJ,CAC5ChB,KAAM2F,EAAAA,GACN5E,QAAAA,QAmBKG,OAAM,WACLX,EAjB8B,CACpCP,KAAM4F,EAAAA,UCnMR,EAAuB,mBCsCvB,MAlCA,YAA0D,IAAtCtE,EAAqC,EAArCA,GAAIuB,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAC9BvC,GAAWwC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,CAAC6C,YAAa,KAAvD,eAAOC,EAAP,KAAiBC,EAAjB,KACMvB,GAAOpB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM2C,MAAMxB,QAoBhD,OAlBAjB,EAAAA,EAAAA,YAAU,WACJjC,GACFf,EAAS0E,EAAW3D,IAAKZ,MAAK,SAACM,GAC3B+E,EAAY,CAACF,YAAa7E,EAAK6E,mBAGpC,KAaD,iCACE,2CAAmBrB,EAAKqB,gBACxB,kBAAMrC,SAVO,SAACC,GAChBA,EAAEC,iBACiC,KAAhCoC,EAASD,YAAYlC,SACpBd,EAAaiD,GACbhD,GAAgB,KAMQc,UAAWC,EAArC,WACE,kBAAO7D,KAAK,OAAO8D,KAAK,cAAcC,SAfrB,SAACN,GACtB,MAAwBA,EAAEO,OAAlBF,EAAR,EAAQA,KAAMG,EAAd,EAAcA,MACd8B,GAAY,kBAAKD,GAAN,cAAiBhC,EAAOG,MAaiCA,MAAO6B,EAASD,eAChF,mBAAQ7F,KAAK,SAAb,mBACA,mBAAQA,KAAK,SAASkE,QAAS,kBAAMpB,GAAgB,IAArD,2BCjCR,EAAkC,+BAAlC,EAAkF,8BAAlF,EAA6J,6BCuC7J,MAnCA,YAAoE,IAC9DmD,EADWnD,EAAkD,EAAlDA,gBAAiB3C,EAAiC,EAAjCA,UAAW+F,EAAsB,EAAtBA,KAAMrD,EAAgB,EAAhBA,aAEjD,OAAQ1C,GACN,IAAK,OACH8F,GACE,SAAC,EAAD,CACE3E,GAAI4E,EACJrD,aAAcA,EACdC,gBAAiBA,IAGrB,MACF,IAAK,SACHmD,GACE,SAAC,EAAD,CACE3E,GAAI4E,EACJrD,aAAcA,EACdC,gBAAiBA,IAGrB,MACF,QACE,WAEJ,OACE,gBAAKc,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,mBAAQK,QAASpB,EAAjB,iBAEDmD,QCoFT,MAxGA,WACE,IAAM1F,GAAWwC,EAAAA,EAAAA,MACXO,GAAUF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQ6C,QAGrD,GAAoCnD,EAAAA,EAAAA,UAAS,IAA7C,eAAOE,EAAP,KAAmBkD,EAAnB,KACA,GAAgCpD,EAAAA,EAAAA,UAAS,IAAzC,eAAOqD,EAAP,KAAiBC,EAAjB,KACMvG,GAAYqD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM2C,MAAMjG,aAC/CI,GAAYiD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM2C,MAAM7F,aAC/CoG,GAAUC,EAAAA,EAAAA,MAsChB,OApCAjD,EAAAA,EAAAA,YAAU,WACRhD,EAASD,OACR,KAmCD,iCACE,iBAAKsD,UAAWC,EAAhB,WACE,qCACA,kBAAOD,UAAWC,EAAlB,UACE,2BACGP,EAAQmD,KAAI,SAACpF,GACZ,OACE,2BACE,wBAAKA,EAAO4B,SACZ,2BACE,mBACEW,UAAWC,EACXK,QAAS,kBAjCF5C,EAiC0BD,EAAOC,GAhC1Df,EAASL,EAAa,WACtBoG,EAAYhF,QACZf,EAAST,GAAa,IAHE,IAACwB,GA+BT,UAIE,SAAC,MAAD,OAEF,mBACEsC,UAAWC,EACXK,QAAS,kBA1BF5C,EA0B0BD,EAAOC,QAzB1Df,EAASkC,EAAanB,IAAKZ,MAAK,WAC9BH,EAASD,QAFa,IAACgB,GAwBT,UAIE,SAAC,MAAD,OAEF,mBACEsC,UAAWC,EACXK,QAAS,kBAAMqC,EAAQG,KAAR,kBAAwBrF,EAAOC,MAFhD,6BAfKD,EAAOC,YA2BxB,kBAAMkC,SAhES,SAACC,GACpBA,EAAEC,iBACwB,KAAtBR,EAAWS,QACbpD,EAASyB,EAAU,CAAEiB,MAAOC,KAAexC,MAAK,WAC9CH,EAASD,KACT8F,EAAc,QA2Dd,WACE,kBACEpG,KAAK,OACL+D,SAtEa,SAACN,GACtB2C,EAAc3C,EAAEO,OAAOC,QAsEfA,MAAOf,EACPyD,YAAY,gBAEd,mBAAQ3G,KAAK,SAAb,uBAGHD,IACC,SAAC,EAAD,CACE+C,gBA9DgB,WACtBvC,EAAST,GAAa,KA8DhBK,UAAWA,EACX0C,aA7DiB,SAAC2B,GACxBjE,EAASa,EAAaoD,EAAM6B,IAAW3F,MAAK,WAC1CH,EAASD,SA4DL4F,KAAMG,QC/GhB,GAAgB,OAAS,uBAAuB,SAAW,yBAAyB,OAAS,uBAAuB,cAAgB,8BAA8B,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,uBAAuB,iBAAmB,kC,UCkCzR,MAhCA,SAAgBO,GACd,IAAML,GAAUC,EAAAA,EAAAA,MAMhB,OACE,oBAAQ5C,UAAWC,EAAAA,OAAnB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACA,mBAAQD,UAAWC,EAAAA,UAAkBK,QAPpB,WACnB2C,eAAeC,WAAW,mBAAmB,GAC7CP,EAAQG,KAAK,WAKX,uBAIA,gBAAK9C,UAAWC,EAAAA,OAAhB,UACE,gBAAKD,UAAWC,EAAAA,cAAhB,UACE,iBAAMD,UAAWC,EAAAA,MAAjB,wBAGJ,0BACE,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,gBAAID,UAAWC,EAAAA,OAAf,WACI,yBAAK,SAAC,KAAD,CAAMkD,GAAG,SAAT,sBACL,yBAAK,SAAC,KAAD,CAAMA,GAAG,WAAT,kCCnBnB,MAPA,SAAgBH,GACd,OACE,6BACI,+DCFR,KCaA,MAVA,SAAgBA,GACd,OACE,iBAAKhD,UAAWC,EAAAA,UAAhB,WACE,SAAC,EAAD,IACG+C,EAAMI,UACT,SAAC,EAAD,QCRN,EAA4B,yBAA5B,EAA6D,qBAA7D,EAA2F,sBAA3F,EAA2H,uBAA3H,EAA8J,yBAA9J,EAAqM,2BCgHrM,MAtGA,WACE,IAAMzG,GAAWwC,EAAAA,EAAAA,MACXiD,GAAQ5C,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM2C,MAAMG,QAG3CpG,GAAYqD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM2C,MAAMjG,aAC/CI,GAAYiD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM2C,MAAM7F,aAC/CkB,GAAS+B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQjC,UACpD,GAAgC2B,EAAAA,EAAAA,UAAS,IAAzC,eAAO8C,EAAP,KAAiBmB,EAAjB,KACA,GAAgCjE,EAAAA,EAAAA,UAAS,IAAzC,eAAOqD,EAAP,KAAiBC,EAAjB,KACQhF,GAAO4F,EAAAA,EAAAA,MAAP5F,GAiDR,OA/CAiC,EAAAA,EAAAA,YAAU,gBACG4D,IAAP7F,GACFf,EAASkF,EAAenE,IACxBf,EAAS8B,EAAaf,KAGtBf,EAAS4D,OAEV,KAwCD,iCACE,iBAAKP,UAAWC,EAAhB,eACUsD,IAAP7F,GAAmB,qCAAa,IAAb,IAAmBD,EAAO4B,UAAc,wCAC5D,kBAAOW,UAAWC,EAAlB,UACE,2BACGmC,EAAMS,KAAI,SAACjC,GACV,OACE,2BACE,yBAAI,kBAAOxE,KAAK,WACVoH,QAAS5C,EAAK6C,UACdtD,SAAU,kBAhDZ,SAACzC,EAAIkD,GACvBjE,EAASgE,EAAWC,EAAMlD,IAAKZ,MAAK,WAClCH,EAAS4D,QA8CyBmD,CAAY9C,EAAKlD,IAAN,QAAC,UACvBkD,GADsB,IAEzB6C,WAAY7C,EAAK6C,mBAGzB,eAAIzD,UAAWY,EAAK6C,UAAYxD,EAAmBA,EAAnD,SAAwEW,EAAKqB,eAC7E,2BACI,mBAAQjC,UAAWC,EAAgBK,QAAS,kBAtCtC,SAAC5C,GACzBf,EAASL,EAAa,SACtBoG,EAAYhF,GACZf,EAAST,GAAa,IAmC8CyH,CAAkB/C,EAAKlD,KAAzE,UAA8E,SAAC,MAAD,OAC9E,mBAAQsC,UAAWC,EAAeK,QAAS,kBA1BpCsD,EA0B4DhD,EAAKlD,QAzB1Ff,EAAS8E,EAAWmC,IAAY9G,MAAK,WAChBH,OAAZ4G,IAAP7F,EAA4BmE,EAAenE,GAAgB6C,QAFrC,IAACqD,GA0BP,UAA6E,SAAC,MAAD,WAX1EhD,EAAKlD,YAkBtB,kBAAMkC,SAvDS,SAACC,GACpBA,EAAEC,iBACqB,KAApBoC,EAASnC,QACVpD,EAASsE,EAAQ,CAACgB,YAAaC,EAAU2B,SAASnG,GAAM,QAAQZ,MAAK,WAChDH,OAAZ4G,IAAP7F,EAA4BmE,EAAenE,GAAgB6C,KAC3D8C,EAAY,QAkDZ,WACI,kBAAOjH,KAAK,OAAO+D,SA3DN,SAACN,GACtBwD,EAAYxD,EAAEO,OAAOC,QA0DgCA,MAAO6B,EAAUa,YAAY,cAC1E,mBAAQ3G,KAAK,SAAb,uBAGLD,IACC,SAAC,EAAD,CACE+C,gBAhDgB,WACtBvC,EAAST,GAAa,KAgDhBK,UAAWA,EACX0C,aA/CiB,SAAC2B,GACxBjE,EAASgE,EAAWC,EAAM6B,IAAW3F,MAAK,WACxCH,EAAS4D,SA8CL+B,KAAMG,Q,4BCrFhB,GAlByB,SAAC,GAA4C,IAA/BqB,EAA8B,EAAzCC,UAA8BC,GAAW,cAInE,OAFArE,EAAAA,EAAAA,YAAU,gBAGR,SAAC,MAAD,kBACMqE,GADN,IAEEC,OAAQ,SAACC,GAAD,MACwC,SAA9CjB,eAAekB,QAAQ,oBACrB,SAACL,GAAD,UAAoBI,KAEpB,SAAC,KAAD,CAAUf,GAAI,oBCKxB,GAbmB,WACjB,OACE,SAAC,EAAD,WACE,UAAC,KAAD,YACE,SAAC,GAAD,CAAkBiB,KAAI,SAAYC,OAAK,EAACN,UAAWO,KACnD,SAAC,GAAD,CAAkBF,KAAI,WAAcL,UAAWQ,KAC/C,SAAC,GAAD,CAAkBH,KAAI,cAAiBL,UAAWO,KAClD,SAAC,KAAD,CAAUnB,GAAE,IAAOY,UAAWO","sources":["webpack://frontend/./src/Components/Folders/folders.module.css?7f78","Redux/Tasks/actions.js","Redux/Folders/thunks.js","webpack://frontend/./src/Components/Folders/Form/form.module.css?a3be","Components/Folders/Form/index.js","Redux/Tasks/thunks.js","webpack://frontend/./src/Components/Tasks/Form/form.module.css?a60e","Components/Tasks/Form/index.js","webpack://frontend/./src/Components/Shared/Modal/modal.module.css?b2b8","Components/Shared/Modal/index.js","Components/Folders/index.js","webpack://frontend/./src/Components/Shared/Header/header.module.css?1ef6","Components/Shared/Header/index.js","Components/Shared/Footer/index.js","Components/Shared/Layout/layout.module.css","Components/Shared/Layout/index.js","webpack://frontend/./src/Components/Tasks/tasks.module.css?1ffb","Components/Tasks/index.js","Routes/privateRouteTodo.js","Routes/todo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"folders_container__kyLao\",\"table\":\"folders_table__Rs24K\",\"btnRed\":\"folders_btnRed__x4Kn6\",\"btnGreen\":\"folders_btnGreen__0zbes\",\"btnEdit\":\"folders_btnEdit__Y9SQ8\",\"completed\":\"folders_completed__mbtXB\",\"description\":\"folders_description__yu206\"};","import {\r\n    MODAL_TYPE,\r\n    SHOW_MODAL,\r\n  } from '../../Constants/actionTypes';\r\n  \r\n  export const setShowModal = (showModal) => {\r\n    return {\r\n      type: SHOW_MODAL,\r\n      showModal\r\n    };\r\n  };\r\n  export const setModalType = (modalType) => {\r\n    return {\r\n      type: MODAL_TYPE,\r\n      modalType\r\n    };\r\n  };","import {\r\n  GET_FOLDERS_FETCHING,\r\n  GET_FOLDERS_FULFILLED,\r\n  GET_FOLDERS_REJECTED,\r\n  UPDATE_FOLDER_FETCHING,\r\n  UPDATE_FOLDER_FULFILLED,\r\n  UPDATE_FOLDER_REJECTED,\r\n  ADD_FOLDER_FETCHING,\r\n  ADD_FOLDER_FULFILLED,\r\n  ADD_FOLDER_REJECTED,\r\n  GET_ONE_FOLDER_FETCHING,\r\n  GET_ONE_FOLDER_FULFILLED,\r\n  GET_ONE_FOLDER_REJECTED,\r\n  DELETE_FOLDER_FETCHING,\r\n  DELETE_FOLDER_FULFILLED,\r\n  DELETE_FOLDER_REJECTED,\r\n} from '../../Constants/actionTypes';\r\n\r\nconst BASE_URL = `http://localhost:5000/api/folders`;\r\nconst getFoldersFetching = () => ({\r\n  type: GET_FOLDERS_FETCHING,\r\n});\r\n\r\nconst getFoldersFulfilled = (payload) => ({\r\n  type: GET_FOLDERS_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getFoldersRejected = () => ({\r\n  type: GET_FOLDERS_REJECTED,\r\n});\r\n\r\nexport const getFolders = () => {\r\n  return (dispatch) => {\r\n    dispatch(getFoldersFetching());\r\n    fetch(BASE_URL)\r\n      .then((response) => {\r\n        if (response.status === 200 || response.status === 201)\r\n          return response.json();\r\n        throw new Error(`HTTP ${response.status}`);\r\n      })\r\n      .then((response) => {\r\n        dispatch(getFoldersFulfilled(response.data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(getFoldersRejected());\r\n      });\r\n  };\r\n};\r\n\r\n\r\nconst updateFolderFetching = () => ({\r\n    type: UPDATE_FOLDER_FETCHING,\r\n  });\r\n  \r\n  const updateFolderFullfiled = (payload, id) => ({\r\n    type: UPDATE_FOLDER_FULFILLED,\r\n    payload,\r\n    id,\r\n  });\r\n  \r\n  const updateFolderRejected = () => ({\r\n    type: UPDATE_FOLDER_REJECTED,\r\n  });\r\n  \r\n  export const updateFolder = (folder, id) => (dispatch) => {\r\n    dispatch(updateFolderFetching());\r\n    return fetch(`${BASE_URL}/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(folder),\r\n    })\r\n      .then((data) => {\r\n        if (data.status === 200 || data.status === 201) return data.json();\r\n        throw new Error(`HTTP ${data.status}`);\r\n      })\r\n      .then(() => {\r\n        dispatch(updateFolderFullfiled(id));\r\n      })\r\n      .catch(() => {\r\n        dispatch(updateFolderRejected());\r\n      });\r\n  };\r\n  \r\n  const addFolderFetching = () => ({\r\n    type: ADD_FOLDER_FETCHING,\r\n  });\r\n  \r\n  const addFolderFulfilled = (payload) => ({\r\n    type: ADD_FOLDER_FULFILLED,\r\n    payload,\r\n  });\r\n  \r\n  const addFolderRejected = () => ({\r\n    type: ADD_FOLDER_REJECTED,\r\n  });\r\n  \r\n  export const addFolder = (folder) => (dispatch) => {\r\n    dispatch(addFolderFetching());\r\n    return fetch(BASE_URL, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(folder),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200 || response.status === 201)\r\n          return response.json();\r\n        throw new Error(`HTTP ${response.status}`);\r\n      })\r\n      .then((response) => {\r\n        dispatch(addFolderFulfilled(response.data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(addFolderRejected());\r\n      });\r\n  };\r\n  const getOneFolderFetching = () => ({\r\n      type: GET_ONE_FOLDER_FETCHING\r\n    });\r\n    \r\n    const getOneFolderFulfilled = (payload) => ({\r\n      type: GET_ONE_FOLDER_FULFILLED,\r\n      payload\r\n    });\r\n    \r\n    const getOneFolderRejected = () => ({\r\n      type: GET_ONE_FOLDER_REJECTED\r\n    });\r\n    \r\n    export const getOneFolder = (id) => {\r\n      return (dispatch) => {\r\n        dispatch(getOneFolderFetching());\r\n        return fetch(`${BASE_URL}/${id}`)\r\n          .then((response) => {\r\n            if (response.status === 200 || response.status === 201) return response.json();\r\n            throw new Error(`HTTP ${response.status}`);\r\n          })\r\n          .then((response) => {\r\n            dispatch(getOneFolderFulfilled(response.data));\r\n            return response.data;\r\n          })\r\n          .catch(() => {\r\n            dispatch(getOneFolderRejected());\r\n          });\r\n      };\r\n    };\r\n    const deleteFolderFetching = () => ({\r\n      type: DELETE_FOLDER_FETCHING\r\n    });\r\n    \r\n    const deleteFolderFulfilled = (payload) => ({\r\n      type: DELETE_FOLDER_FULFILLED,\r\n      payload\r\n    });\r\n    \r\n    const deleteFolderRejected = () => ({\r\n      type: DELETE_FOLDER_REJECTED\r\n    });\r\n    \r\n    export const deleteFolder = (id) => (dispatch) => {\r\n      dispatch(deleteFolderFetching());\r\n      return fetch(`${BASE_URL}/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        }\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200 || response.status === 201) return response.json();\r\n          throw new Error(`HTTP ${response.status}`);\r\n        })\r\n        .then((response) => {\r\n          dispatch(deleteFolderFulfilled(response.data));\r\n        })\r\n        .catch(() => {\r\n          dispatch(deleteFolderRejected());\r\n        });\r\n    };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__oMN0Q\"};","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOneFolder } from '../../../Redux/Folders/thunks';\r\nimport styles from './form.module.css';\r\n\r\nfunction FolderForm({ id, handleSubmit, handleShowModal }) {\r\n  const dispatch = useDispatch();\r\n  const [folderText, setFolderTest] = useState({title: ''});\r\n  const folder = useSelector((state) => state.folders.folder);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getOneFolder(id)).then((data) => {\r\n          setFolderTest({title: data.title })\r\n      })\r\n    }\r\n  }, []);\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFolderTest({ ...folderText, [name]: value });\r\n  }\r\n  const onSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if(folderText.title.trim() !== ''){\r\n        handleSubmit(folderText);\r\n        handleShowModal(false);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h3>Editing Folder: {folder.title}</h3>\r\n      <form onSubmit={onSubmit} className={styles.form}>\r\n        <input type=\"text\" name=\"title\" onChange={handleOnChange} value={folderText.title} />\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={() => handleShowModal(false)}>Cancel</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default FolderForm;\r\n","import {\r\n  GET_TASKS_FETCHING,\r\n  GET_TASKS_FULFILLED,\r\n  GET_TASKS_REJECTED,\r\n  UPDATE_TASK_FETCHING,\r\n  UPDATE_TASK_FULFILLED,\r\n  UPDATE_TASK_REJECTED,\r\n  ADD_TASK_FETCHING,\r\n  ADD_TASK_FULFILLED,\r\n  ADD_TASK_REJECTED,\r\n  GET_ONE_TASK_FETCHING,\r\n  GET_ONE_TASK_FULFILLED,\r\n  GET_ONE_TASK_REJECTED,\r\n  DELETE_TASK_FETCHING,\r\n  DELETE_TASK_FULFILLED,\r\n  DELETE_TASK_REJECTED,\r\n  GET_FOLDER_TASKS_FETCHING,\r\n  GET_FOLDER_TASKS_FULFILLED,\r\n  GET_FOLDER_TASKS_REJECTED,\r\n} from '../../Constants/actionTypes';\r\n\r\nconst BASE_URL = `http://localhost:5000/api/tasks`;\r\nconst getTasksFetching = () => ({\r\n  type: GET_TASKS_FETCHING,\r\n});\r\n\r\nconst getTasksFulfilled = (payload) => ({\r\n  type: GET_TASKS_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getTasksRejected = () => ({\r\n  type: GET_TASKS_REJECTED,\r\n});\r\n\r\nexport const getTasks = () => {\r\n  return (dispatch) => {\r\n    dispatch(getTasksFetching());\r\n    fetch(BASE_URL)\r\n      .then((response) => {\r\n        if (response.status === 200 || response.status === 201)\r\n          return response.json();\r\n        throw new Error(`HTTP ${response.status}`);\r\n      })\r\n      .then((response) => {\r\n        dispatch(getTasksFulfilled(response.data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(getTasksRejected());\r\n      });\r\n  };\r\n};\r\n\r\nconst updateTasksFetching = () => ({\r\n  type: UPDATE_TASK_FETCHING,\r\n});\r\n\r\nconst updateTasksFullfiled = (payload, id) => ({\r\n  type: UPDATE_TASK_FULFILLED,\r\n  payload,\r\n  id,\r\n});\r\n\r\nconst updateTasksRejected = () => ({\r\n  type: UPDATE_TASK_REJECTED,\r\n});\r\n\r\nexport const updateTask = (task, id) => (dispatch) => {\r\n  dispatch(updateTasksFetching());\r\n  return fetch(`${BASE_URL}/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(task),\r\n  })\r\n    .then((data) => {\r\n      if (data.status === 200 || data.status === 201) return data.json();\r\n      throw new Error(`HTTP ${data.status}`);\r\n    })\r\n    .then(() => {\r\n      dispatch(updateTasksFullfiled(id));\r\n    })\r\n    .catch(() => {\r\n      dispatch(updateTasksRejected());\r\n    });\r\n};\r\n\r\nconst addTaskFetching = () => ({\r\n  type: ADD_TASK_FETCHING,\r\n});\r\n\r\nconst addTaskFulfilled = (payload) => ({\r\n  type: ADD_TASK_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addTaskRejected = () => ({\r\n  type: ADD_TASK_REJECTED,\r\n});\r\n\r\nexport const addTask = (task) => (dispatch) => {\r\n  dispatch(addTaskFetching());\r\n  return fetch(BASE_URL, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(task),\r\n  })\r\n    .then((response) => {\r\n      if (response.status === 200 || response.status === 201)\r\n        return response.json();\r\n      throw new Error(`HTTP ${response.status}`);\r\n    })\r\n    .then((response) => {\r\n      dispatch(addTaskFulfilled(response.data));\r\n    })\r\n    .catch(() => {\r\n      dispatch(addTaskRejected());\r\n    });\r\n};\r\nconst getOneTaskFetching = () => ({\r\n  type: GET_ONE_TASK_FETCHING,\r\n});\r\n\r\nconst getOneTaskFulfilled = (payload) => ({\r\n  type: GET_ONE_TASK_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getOneTaskRejected = () => ({\r\n  type: GET_ONE_TASK_REJECTED,\r\n});\r\n\r\nexport const getOneTask = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(getOneTaskFetching());\r\n    return fetch(`${BASE_URL}/${id}`)\r\n      .then((response) => {\r\n        if (response.status === 200 || response.status === 201)\r\n          return response.json();\r\n        throw new Error(`HTTP ${response.status}`);\r\n      })\r\n      .then((response) => {\r\n        dispatch(getOneTaskFulfilled(response.data));\r\n        return response.data;\r\n      })\r\n      .catch(() => {\r\n        dispatch(getOneTaskRejected());\r\n      });\r\n  };\r\n};\r\nconst deleteTaskFetching = () => ({\r\n  type: DELETE_TASK_FETCHING,\r\n});\r\n\r\nconst deleteTaskFulfilled = (payload) => ({\r\n  type: DELETE_TASK_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst deleteTaskRejected = () => ({\r\n  type: DELETE_TASK_REJECTED,\r\n});\r\n\r\nexport const deleteTask = (id) => (dispatch) => {\r\n  dispatch(deleteTaskFetching());\r\n  return fetch(`${BASE_URL}/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.status === 200 || response.status === 201)\r\n        return response.json();\r\n      throw new Error(`HTTP ${response.status}`);\r\n    })\r\n    .then((response) => {\r\n      dispatch(deleteTaskFulfilled(response.data));\r\n    })\r\n    .catch(() => {\r\n      dispatch(deleteTaskRejected());\r\n    });\r\n};\r\n\r\nconst getFolderTasksFetching = () => ({\r\n  type: GET_FOLDER_TASKS_FETCHING,\r\n});\r\n\r\nconst getFolderTasksFulfilled = (payload) => ({\r\n  type: GET_FOLDER_TASKS_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getFolderTasksRejected = () => ({\r\n  type: GET_FOLDER_TASKS_REJECTED,\r\n});\r\n\r\nexport const getFolderTasks = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(getFolderTasksFetching());\r\n    fetch(`${BASE_URL}/folder/${id}`)\r\n      .then((response) => {\r\n        if (response.status === 200 || response.status === 201)\r\n        return response.json();\r\n        throw new Error(`HTTP ${response.status}`);\r\n      })\r\n      .then((response) => {\r\n        dispatch(getFolderTasksFulfilled(response.data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(getFolderTasksRejected());\r\n      });\r\n  };\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__2j-FI\"};","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOneTask } from '../../../Redux/Tasks/thunks';\r\nimport styles from './form.module.css';\r\n\r\nfunction TaskForm({ id, handleSubmit, handleShowModal }) {\r\n  const dispatch = useDispatch();\r\n  const [taskText, setTaskTest] = useState({description: ''});\r\n  const task = useSelector((state) => state.tasks.task);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getOneTask(id)).then((data) => {\r\n          setTaskTest({description: data.description })\r\n      })\r\n    }\r\n  }, []);\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTaskTest({ ...taskText, [name]: value });\r\n  }\r\n  const onSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if(taskText.description.trim() !== ''){\r\n        handleSubmit(taskText);\r\n        handleShowModal(false);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h3>Editing Task: {task.description}</h3>\r\n      <form onSubmit={onSubmit} className={styles.form}>\r\n        <input type=\"text\" name=\"description\" onChange={handleOnChange} value={taskText.description} />\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={() => handleShowModal(false)}>Cancel</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default TaskForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBackground\":\"modal_modalBackground__Utu+F\",\"modalContainer\":\"modal_modalContainer__sH01Z\",\"title\":\"modal_title__6Z6y2\",\"titleCloseBtn\":\"modal_titleCloseBtn__c8kLK\",\"body\":\"modal_body__wvPCo\",\"footer\":\"modal_footer__KOqsb\",\"cancelBtn\":\"modal_cancelBtn__apXAg\",\"close\":\"modal_close__KQlUH\"};","import React from 'react';\r\nimport FolderForm from '../../Folders/Form';\r\nimport TaskForm from '../../Tasks/Form';\r\nimport styles from './modal.module.css';\r\n\r\nfunction Modal({ handleShowModal, modalType, meta, handleSubmit }) {\r\n  let modalComponent;\r\n  switch (modalType) {\r\n    case 'task':\r\n      modalComponent = (\r\n        <TaskForm\r\n          id={meta}\r\n          handleSubmit={handleSubmit}\r\n          handleShowModal={handleShowModal}\r\n        />\r\n      );\r\n      break;\r\n    case 'folder':\r\n      modalComponent = (\r\n        <FolderForm\r\n          id={meta}\r\n          handleSubmit={handleSubmit}\r\n          handleShowModal={handleShowModal}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      <></>;\r\n  }\r\n  return (\r\n    <div className={styles.modalBackground}>\r\n      <div className={styles.modalContainer}>\r\n        <div className={styles.titleCloseBtn}>\r\n          <button onClick={handleShowModal}>X</button>\r\n        </div>\r\n        {modalComponent}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Modal;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './folders.module.css';\r\n// import Spinner from '../Shared/Spinner';\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\nimport { setModalType, setShowModal } from '../../Redux/Tasks/actions';\r\nimport Modal from '../Shared/Modal';\r\nimport {\r\n  addFolder,\r\n  deleteFolder,\r\n  getFolders,\r\n  updateFolder,\r\n} from '../../Redux/Folders/thunks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Folders() {\r\n  const dispatch = useDispatch();\r\n  const folders = useSelector((state) => state.folders.list);\r\n  // const isLoading = useSelector((state) => state.tasks.isLoading);\r\n  // const isLoadingForm = useSelector((state) => state.tasks.isLoadingForm);\r\n  const [folderText, setFolderText] = useState('');\r\n  const [idActive, setIdActive] = useState('');\r\n  const showModal = useSelector((state) => state.tasks.showModal);\r\n  const modalType = useSelector((state) => state.tasks.modalType);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getFolders());\r\n  }, []);\r\n\r\n  const handleOnChange = (e) => {\r\n    setFolderText(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (folderText.trim() !== '') {\r\n      dispatch(addFolder({ title: folderText })).then(() => {\r\n        dispatch(getFolders());\r\n        setFolderText('');\r\n      });\r\n    }\r\n  };\r\n  const handleClickUpdate = (id) => {\r\n    dispatch(setModalType('folder'));\r\n    setIdActive(id);\r\n    dispatch(setShowModal(true));\r\n  };\r\n  const handleShowModal = () => {\r\n    dispatch(setShowModal(false));\r\n  };\r\n  const handleUpdateTask = (task) => {\r\n    dispatch(updateFolder(task, idActive)).then(() => {\r\n      dispatch(getFolders());\r\n    });\r\n  };\r\n  const handleClickDelete = (id) => {\r\n    dispatch(deleteFolder(id)).then(() => {\r\n      dispatch(getFolders());\r\n    });\r\n  };\r\n  // if (isLoading || isLoadingForm)\r\n  //   return <Spinner type=\"ThreeDots\" color=\"#002147\" height={80} width={80} />;\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <h3>Folders</h3>\r\n        <table className={styles.table}>\r\n          <tbody>\r\n            {folders.map((folder) => {\r\n              return (\r\n                <tr key={folder.id}>\r\n                  <td>{folder.title}</td>\r\n                  <td>\r\n                    <button\r\n                      className={styles.btnEdit}\r\n                      onClick={() => handleClickUpdate(folder.id)}\r\n                    >\r\n                      <FaEdit />\r\n                    </button>\r\n                    <button\r\n                      className={styles.btnRed}\r\n                      onClick={() => handleClickDelete(folder.id)}\r\n                    >\r\n                      <FaTrashAlt />\r\n                    </button>\r\n                    <button\r\n                      className={styles.btnGreen}\r\n                      onClick={() => history.push(`/folder/${folder.id}`)}\r\n                    >\r\n                      View items\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type='text'\r\n            onChange={handleOnChange}\r\n            value={folderText}\r\n            placeholder='New Folder'\r\n          />\r\n          <button type='submit'>Add</button>\r\n        </form>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          handleShowModal={handleShowModal}\r\n          modalType={modalType}\r\n          handleSubmit={handleUpdateTask}\r\n          meta={idActive}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Folders;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__pxf3z\",\"superior\":\"header_superior__uysm3\",\"middle\":\"header_middle__FJGMZ\",\"logoContainer\":\"header_logoContainer__19b9P\",\"btnLogout\":\"header_btnLogout__DScF8\",\"title\":\"header_title__BummN\",\"routes\":\"header_routes__knzZP\",\"routesPostulants\":\"header_routesPostulants__g5k8P\"};","import styles from './header.module.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = () => {\r\n    sessionStorage.removeItem('isAuthenticated', true);\r\n    history.push('/login');\r\n  };\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.superior}>\r\n      <button className={styles.btnLogout} onClick={handleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className={styles.middle}>\r\n        <div className={styles.logoContainer}>\r\n          <span className={styles.title}>TO DO</span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <nav className={styles.navbar}>\r\n          <ul className={styles.routes}>\r\n              <li>{<Link to=\"/tasks\">Tasks</Link>}</li>\r\n              <li>{<Link to=\"/folders\">Folders</Link>}</li>\r\n\r\n          </ul>\r\n        </nav>      \r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Footer(props) {\r\n  return (\r\n    <footer>\r\n        <span>© 2022 Feraudo Valentín</span>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","// extracted by mini-css-extract-plugin\nexport default {};","import Header from '../Header';\r\nimport Footer from '../Footer';\r\nimport styles from './layout.module.css';\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n        {props.children}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tasks_container__2bmib\",\"table\":\"tasks_table__ypSbE\",\"btnRed\":\"tasks_btnRed__jkDRq\",\"btnEdit\":\"tasks_btnEdit__U8mms\",\"completed\":\"tasks_completed__q8E5A\",\"description\":\"tasks_description__8jQ9p\"};","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTask, deleteTask, getTasks, updateTask, getFolderTasks } from '../../Redux/Tasks/thunks';\r\nimport { getOneFolder } from '../../Redux/Folders/thunks'\r\nimport styles from './tasks.module.css';\r\n// import Spinner from '../Shared/Spinner';\r\nimport { FaEdit, FaTrashAlt } from \"react-icons/fa\";\r\nimport { setModalType, setShowModal } from '../../Redux/Tasks/actions';\r\nimport Modal from '../Shared/Modal';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Tasks() {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks.list);\r\n  // const isLoading = useSelector((state) => state.tasks.isLoading);\r\n  // const isLoadingForm = useSelector((state) => state.tasks.isLoadingForm);\r\n  const showModal = useSelector((state) => state.tasks.showModal);\r\n  const modalType = useSelector((state) => state.tasks.modalType);\r\n  const folder = useSelector((state) => state.folders.folder);\r\n  const [taskText, setTaskText] = useState('');\r\n  const [idActive, setIdActive] = useState('');\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id !== undefined){\r\n      dispatch(getFolderTasks(id));\r\n      dispatch(getOneFolder(id))\r\n    } \r\n    else {\r\n      dispatch(getTasks());\r\n    }\r\n  }, [])\r\n\r\n  const onCompleted = (id, task) => {\r\n    dispatch(updateTask(task, id)).then(() => {\r\n      dispatch(getTasks());\r\n    });\r\n  }\r\n  const handleOnChange = (e) => {\r\n    setTaskText(e.target.value);\r\n  }\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if(taskText.trim() !== ''){\r\n      dispatch(addTask({description: taskText, FolderId:id || null})).then(() => {\r\n        id !== undefined ? dispatch(getFolderTasks(id)) : dispatch(getTasks());\r\n        setTaskText('');\r\n      });\r\n    }\r\n  }\r\n  const handleClickUpdate = (id) => {\r\n    dispatch(setModalType('task'));\r\n    setIdActive(id);\r\n    dispatch(setShowModal(true));\r\n  };\r\n  const handleShowModal = () => {\r\n    dispatch(setShowModal(false));\r\n  };\r\n  const handleUpdateTask = (task) => {\r\n    dispatch(updateTask(task, idActive)).then(() => {\r\n      dispatch(getTasks());\r\n    });\r\n  }\r\n  const handleClickDelete = (idDeleted) => {\r\n    dispatch(deleteTask(idDeleted)).then(() => {\r\n      id !== undefined ? dispatch(getFolderTasks(id)) : dispatch(getTasks());\r\n    });\r\n  };\r\n  // if (isLoading || isLoadingForm)\r\n  //   return <Spinner type=\"ThreeDots\" color=\"#002147\" height={80} width={80} />;\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {id !== undefined ? <h3>Folders {'>'} {folder.title}</h3> : <h3>To-Do List</h3>}\r\n        <table className={styles.table}>\r\n          <tbody>\r\n            {tasks.map((task) => {\r\n              return (\r\n                <tr key={task.id}>\r\n                  <td><input type=\"checkbox\" \r\n                        checked={task.completed} \r\n                        onChange={() => onCompleted(task.id, {\r\n                          ...task,\r\n                          completed: !task.completed\r\n                        }) }\r\n                      /></td>\r\n                  <td className={task.completed ? styles.completed : styles.description}>{task.description}</td>\r\n                  <td>\r\n                      <button className={styles.btnEdit} onClick={() => handleClickUpdate(task.id)}><FaEdit /></button>\r\n                      <button className={styles.btnRed} onClick={() => handleClickDelete(task.id)}><FaTrashAlt /></button>\r\n                  </td>\r\n              </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" onChange={handleOnChange} value={taskText} placeholder=\"New Task\" />\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          handleShowModal={handleShowModal}\r\n          modalType={modalType}\r\n          handleSubmit={handleUpdateTask}\r\n          meta={idActive}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRouteTodo = ({ component: RouteComponent, ...rest }) => {\r\n\r\n  useEffect(() => {\r\n  },);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        sessionStorage.getItem('isAuthenticated') === 'true' ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={'/forbidden'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRouteTodo;","import { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Folders from '../Components/Folders';\r\nimport Layout from '../Components/Shared/Layout';\r\nimport Tasks from '../Components/Tasks'\r\nimport PrivateRouteTodo from './privateRouteTodo';\r\n\r\nconst TodoRoutes = () => {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <PrivateRouteTodo path={`/tasks`} exact component={Tasks} />\r\n        <PrivateRouteTodo path={`/folders`} component={Folders} />\r\n        <PrivateRouteTodo path={`/folder/:id`} component={Tasks} />\r\n        <Redirect to={`/`} component={Tasks} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TodoRoutes;"],"names":["setShowModal","showModal","type","SHOW_MODAL","setModalType","modalType","MODAL_TYPE","BASE_URL","getFolders","dispatch","GET_FOLDERS_FETCHING","fetch","then","response","status","json","Error","payload","data","GET_FOLDERS_FULFILLED","catch","GET_FOLDERS_REJECTED","updateFolder","folder","id","UPDATE_FOLDER_FETCHING","method","headers","body","JSON","stringify","UPDATE_FOLDER_FULFILLED","updateFolderFullfiled","UPDATE_FOLDER_REJECTED","addFolder","ADD_FOLDER_FETCHING","mode","ADD_FOLDER_FULFILLED","ADD_FOLDER_REJECTED","getOneFolder","GET_ONE_FOLDER_FETCHING","GET_ONE_FOLDER_FULFILLED","GET_ONE_FOLDER_REJECTED","deleteFolder","DELETE_FOLDER_FETCHING","DELETE_FOLDER_FULFILLED","DELETE_FOLDER_REJECTED","handleSubmit","handleShowModal","useDispatch","useState","title","folderText","setFolderTest","useSelector","state","folders","useEffect","onSubmit","e","preventDefault","trim","className","styles","name","onChange","target","value","onClick","getTasks","GET_TASKS_FETCHING","GET_TASKS_FULFILLED","GET_TASKS_REJECTED","updateTask","task","UPDATE_TASK_FETCHING","UPDATE_TASK_FULFILLED","updateTasksFullfiled","UPDATE_TASK_REJECTED","addTask","ADD_TASK_FETCHING","ADD_TASK_FULFILLED","ADD_TASK_REJECTED","getOneTask","GET_ONE_TASK_FETCHING","GET_ONE_TASK_FULFILLED","GET_ONE_TASK_REJECTED","deleteTask","DELETE_TASK_FETCHING","DELETE_TASK_FULFILLED","DELETE_TASK_REJECTED","getFolderTasks","GET_FOLDER_TASKS_FETCHING","GET_FOLDER_TASKS_FULFILLED","GET_FOLDER_TASKS_REJECTED","description","taskText","setTaskTest","tasks","modalComponent","meta","list","setFolderText","idActive","setIdActive","history","useHistory","map","push","placeholder","props","sessionStorage","removeItem","to","children","setTaskText","useParams","undefined","checked","completed","onCompleted","handleClickUpdate","idDeleted","FolderId","RouteComponent","component","rest","render","routeProps","getItem","path","exact","Tasks","Folders"],"sourceRoot":""}